<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.system.mapper.MaterialApplicationTypeMapper">
  <resultMap id="BaseResultMap" type="com.system.po.MaterialApplicationType">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="material_name" jdbcType="VARCHAR" property="materialName" />
    <result column="material_code" jdbcType="VARCHAR" property="materialCode" />
    <result column="material_code2" jdbcType="VARCHAR" property="materialCode2" />
    <result column="material_code3" jdbcType="VARCHAR" property="materialCode3" />
    <result column="material_note" jdbcType="VARCHAR" property="materialNote" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Id, material_name, material_code, material_code2, material_code3, material_note
  </sql>
  <select id="selectByExample" parameterType="com.system.po.MaterialApplicationTypeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from material_application_type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from material_application_type
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from material_application_type
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.system.po.MaterialApplicationTypeExample">
    delete from material_application_type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.system.po.MaterialApplicationType">
    insert into material_application_type (Id, material_name, material_code, 
      material_code2, material_code3, material_note
      )
    values (#{id,jdbcType=INTEGER}, #{materialName,jdbcType=VARCHAR}, #{materialCode,jdbcType=VARCHAR}, 
      #{materialCode2,jdbcType=VARCHAR}, #{materialCode3,jdbcType=VARCHAR}, #{materialNote,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.system.po.MaterialApplicationType">
    insert into material_application_type
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        Id,
      </if>
      <if test="materialName != null">
        material_name,
      </if>
      <if test="materialCode != null">
        material_code,
      </if>
      <if test="materialCode2 != null">
        material_code2,
      </if>
      <if test="materialCode3 != null">
        material_code3,
      </if>
      <if test="materialNote != null">
        material_note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="materialName != null">
        #{materialName,jdbcType=VARCHAR},
      </if>
      <if test="materialCode != null">
        #{materialCode,jdbcType=VARCHAR},
      </if>
      <if test="materialCode2 != null">
        #{materialCode2,jdbcType=VARCHAR},
      </if>
      <if test="materialCode3 != null">
        #{materialCode3,jdbcType=VARCHAR},
      </if>
      <if test="materialNote != null">
        #{materialNote,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.system.po.MaterialApplicationTypeExample" resultType="java.lang.Integer">
    select count(*) from material_application_type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update material_application_type
    <set>
      <if test="record.id != null">
        Id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.materialName != null">
        material_name = #{record.materialName,jdbcType=VARCHAR},
      </if>
      <if test="record.materialCode != null">
        material_code = #{record.materialCode,jdbcType=VARCHAR},
      </if>
      <if test="record.materialCode2 != null">
        material_code2 = #{record.materialCode2,jdbcType=VARCHAR},
      </if>
      <if test="record.materialCode3 != null">
        material_code3 = #{record.materialCode3,jdbcType=VARCHAR},
      </if>
      <if test="record.materialNote != null">
        material_note = #{record.materialNote,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update material_application_type
    set Id = #{record.id,jdbcType=INTEGER},
      material_name = #{record.materialName,jdbcType=VARCHAR},
      material_code = #{record.materialCode,jdbcType=VARCHAR},
      material_code2 = #{record.materialCode2,jdbcType=VARCHAR},
      material_code3 = #{record.materialCode3,jdbcType=VARCHAR},
      material_note = #{record.materialNote,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.system.po.MaterialApplicationType">
    update material_application_type
    <set>
      <if test="materialName != null">
        material_name = #{materialName,jdbcType=VARCHAR},
      </if>
      <if test="materialCode != null">
        material_code = #{materialCode,jdbcType=VARCHAR},
      </if>
      <if test="materialCode2 != null">
        material_code2 = #{materialCode2,jdbcType=VARCHAR},
      </if>
      <if test="materialCode3 != null">
        material_code3 = #{materialCode3,jdbcType=VARCHAR},
      </if>
      <if test="materialNote != null">
        material_note = #{materialNote,jdbcType=VARCHAR},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.system.po.MaterialApplicationType">
    update material_application_type
    set material_name = #{materialName,jdbcType=VARCHAR},
      material_code = #{materialCode,jdbcType=VARCHAR},
      material_code2 = #{materialCode2,jdbcType=VARCHAR},
      material_code3 = #{materialCode3,jdbcType=VARCHAR},
      material_note = #{materialNote,jdbcType=VARCHAR}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>