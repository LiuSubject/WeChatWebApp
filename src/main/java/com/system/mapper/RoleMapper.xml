<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.system.mapper.RoleMapper" >
  <resultMap id="BaseResultMap" type="com.system.po.Role" >
    <id column="Id" property="id" jdbcType="INTEGER" />
    <result column="roleID" property="roleid" jdbcType="CHAR" />
    <result column="real_name" property="realName" jdbcType="VARCHAR" />
    <result column="roleName" property="rolename" jdbcType="VARCHAR" />
    <result column="permissions" property="permissions" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    Id, roleID, real_name, roleName, permissions
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.system.po.RoleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from role
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from role
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.system.po.RoleExample" >
    delete from role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.system.po.Role" >
    insert into role (Id, roleID, real_name, 
      roleName, permissions)
    values (#{id,jdbcType=INTEGER}, #{roleid,jdbcType=CHAR}, #{realName,jdbcType=VARCHAR}, 
      #{rolename,jdbcType=VARCHAR}, #{permissions,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.system.po.Role" >
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        Id,
      </if>
      <if test="roleid != null" >
        roleID,
      </if>
      <if test="realName != null" >
        real_name,
      </if>
      <if test="rolename != null" >
        roleName,
      </if>
      <if test="permissions != null" >
        permissions,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="roleid != null" >
        #{roleid,jdbcType=CHAR},
      </if>
      <if test="realName != null" >
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="rolename != null" >
        #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="permissions != null" >
        #{permissions,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.system.po.RoleExample" resultType="java.lang.Integer" >
    select count(*) from role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update role
    <set >
      <if test="record.id != null" >
        Id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.roleid != null" >
        roleID = #{record.roleid,jdbcType=CHAR},
      </if>
      <if test="record.realName != null" >
        real_name = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.rolename != null" >
        roleName = #{record.rolename,jdbcType=VARCHAR},
      </if>
      <if test="record.permissions != null" >
        permissions = #{record.permissions,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update role
    set Id = #{record.id,jdbcType=INTEGER},
      roleID = #{record.roleid,jdbcType=CHAR},
      real_name = #{record.realName,jdbcType=VARCHAR},
      roleName = #{record.rolename,jdbcType=VARCHAR},
      permissions = #{record.permissions,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.system.po.Role" >
    update role
    <set >
      <if test="roleid != null" >
        roleID = #{roleid,jdbcType=CHAR},
      </if>
      <if test="realName != null" >
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="rolename != null" >
        roleName = #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="permissions != null" >
        permissions = #{permissions,jdbcType=VARCHAR},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.system.po.Role" >
    update role
    set roleID = #{roleid,jdbcType=CHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      roleName = #{rolename,jdbcType=VARCHAR},
      permissions = #{permissions,jdbcType=VARCHAR}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>